<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">
	<filter><!-- 디스패쳐를 쓰면 컨테이너가 구동되고 객체를 생성해서 어플리케이션을 돌리는데 문제는 한글은 깨짐 그래서 이걸 해주는거임 -->
		<filter-name>characterEncoding</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>EUC-KR</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>characterEncoding</filter-name>
		<url-pattern>*.do</url-pattern><!-- .do로 오는 모든 요청을 필터링 해준다는거지~ -->
	</filter-mapping>
	
	<context-param>
		<param-name>contextConfigLocation</param-name><!-- 이 파라미터를 쓰면 ContextLoader가 load할 수 있는 설정파일을 여러개 쓸수 있음 즉 <param-value>에 주소를 여러개쓸수있음 -->
		<param-value>classpath:applicationContext.xml</param-value><!-- 이 파일이 비즈니스 컴포넌트를 생성하는 파일임  아래에 리스너를 해야 이게 디스패쳐보다 먼저 실행됨  -->
	</context-param><!-- 이걸 안쓰면 default로  applicationContext.xml만 쓰게됨-->
	
	<listener><!-- 이 리스너의 역할은?? 왜 쓰는가? 구체적으로 무슨일을 하는거지? -->
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class><!-- 404페이지에 설명 일단 자동으로 메모리에 생성 -->
	</listener><!-- 리스너 태그는 웹 어플리케이션의 시작과 종료시 다음의 메소드가 자동으로 호출.... 이라고 설명되어있는데....? -->

	<servlet><!-- 잘보면 서블릿은 이거 하나임 즉, 서블릿 컨테이너는 디스패쳐 하나만 생성하는거임 이게 스프링mvc? 뭐 그런거임  -->
		<servlet-name>action</servlet-name><!-- 디스패쳐는 모든 요청을 자기가 받아서 처리 해주는 서블렛이다 원래는 각 요청의 각각의 서블랫이 있었다. -->
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param><!-- 근데 이걸 왜 하더라? -->
			<param-name>contextConfigLocation</param-name><!-- 이름 지정해서 어디다씀? -->
			<param-value>/WEB-INF/config/presentation-layer.xml</param-value><!-- 위치를 이곳으로 설정해주면 저 스프링 설정파일을 사용함  근데 왜 이 스프링 파일을 쓰려고 하는거지?-->
		</init-param><!-- 설정 안해주면 WEB-INF에 있는 XML파일을 기본값으로 사용함 -->
	</servlet>
	<servlet-mapping>
		<servlet-name>action</servlet-name>
		<url-pattern>*.do</url-pattern><!-- .do로 끝나는 uri의 요청 이름은 action이고 그것을 위에있는  action의 이름을 가진 디스패쳐가 처리함-->
	</servlet-mapping>
</web-app>